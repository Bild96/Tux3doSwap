{"mappings":"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","sources":["main.js"],"sourcesContent":["const serverUrl = \"https://fzieqrpbmmbl.usemoralis.com:2053/server\"; //Server url from moralis.io\nconst appId = \"UMRjogCIfmBfqiyPMIwkKTJ9wWV3sw13CSfjzTur\"; // Application id from moralis.io\n\nlet currentTrade = {};\nlet currentSelectSide;\nlet tokens;\n\nasync function init() {\n  await Moralis.start({ serverUrl, appId });\n  await Moralis.enableWeb3();\n  await listAvailableTokens();\n  currentUser = Moralis.User.current();\n  if (currentUser) {\n    document.getElementById(\"swap_button\").disabled = false;\n  }\n}\n\nasync function listAvailableTokens() {\n  const result = await Moralis.Plugins.oneInch.getSupportedTokens({\n    chain: \"eth\", // The blockchain you want to use (eth/bsc/polygon)\n  });\n  tokens = result.tokens;\n  let parent = document.getElementById(\"token_list\");\n  for (const address in tokens) {\n    let token = tokens[address];\n    let div = document.createElement(\"div\");\n    div.setAttribute(\"data-address\", address);\n    div.className = \"token_row\";\n    let html = `\n        <img class=\"token_list_img\" src=\"${token.logoURI}\">\n        <span class=\"token_list_text\">${token.symbol}</span>\n        `;\n    div.innerHTML = html;\n    div.onclick = () => {\n      selectToken(address);\n    };\n    parent.appendChild(div);\n  }\n}\n\nfunction selectToken(address) {\n  closeModal();\n  console.log(tokens);\n  currentTrade[currentSelectSide] = tokens[address];\n  console.log(currentTrade);\n  renderInterface();\n  getQuote();\n}\n\nfunction renderInterface() {\n  if (currentTrade.from) {\n    document.getElementById(\"from_token_img\").src = currentTrade.from.logoURI;\n    document.getElementById(\"from_token_text\").innerHTML = currentTrade.from.symbol;\n  }\n  if (currentTrade.to) {\n    document.getElementById(\"to_token_img\").src = currentTrade.to.logoURI;\n    document.getElementById(\"to_token_text\").innerHTML = currentTrade.to.symbol;\n  }\n}\n\nasync function login() {\n  try {\n    currentUser = Moralis.User.current();\n    if (!currentUser) {\n      currentUser = await Moralis.authenticate();\n    }\n    document.getElementById(\"swap_button\").disabled = false;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction openModal(side) {\n  currentSelectSide = side;\n  document.getElementById(\"token_modal\").style.display = \"block\";\n}\nfunction closeModal() {\n  document.getElementById(\"token_modal\").style.display = \"none\";\n}\n\nasync function getQuote() {\n  if (!currentTrade.from || !currentTrade.to || !document.getElementById(\"from_amount\").value) return;\n\n  let amount = Number(document.getElementById(\"from_amount\").value * 10 ** currentTrade.from.decimals);\n\n  const quote = await Moralis.Plugins.oneInch.quote({\n    chain: \"eth\", // The blockchain you want to use (eth/bsc/polygon)\n    fromTokenAddress: currentTrade.from.address, // The token you want to swap\n    toTokenAddress: currentTrade.to.address, // The token you want to receive\n    amount: amount,\n  });\n  console.log(quote);\n  document.getElementById(\"gas_estimate\").innerHTML = quote.estimatedGas;\n  document.getElementById(\"to_amount\").value = quote.toTokenAmount / 10 ** quote.toToken.decimals;\n}\n\nasync function trySwap() {\n  let address = Moralis.User.current().get(\"ethAddress\");\n  let amount = Number(document.getElementById(\"from_amount\").value * 10 ** currentTrade.from.decimals);\n  if (currentTrade.from.symbol !== \"ETH\") {\n    const allowance = await Moralis.Plugins.oneInch.hasAllowance({\n      chain: \"eth\", // The blockchain you want to use (eth/bsc/polygon)\n      fromTokenAddress: currentTrade.from.address, // The token you want to swap\n      fromAddress: address, // Your wallet address\n      amount: amount,\n    });\n    console.log(allowance);\n    if (!allowance) {\n      await Moralis.Plugins.oneInch.approve({\n        chain: \"eth\", // The blockchain you want to use (eth/bsc/polygon)\n        tokenAddress: currentTrade.from.address, // The token you want to swap\n        fromAddress: address, // Your wallet address\n      });\n    }\n  }\n  try {\n    let receipt = await doSwap(address, amount);\n    alert(\"Swap Complete\");\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction doSwap(userAddress, amount) {\n  return Moralis.Plugins.oneInch.swap({\n    chain: \"eth\", // The blockchain you want to use (eth/bsc/polygon)\n    fromTokenAddress: currentTrade.from.address, // The token you want to swap\n    toTokenAddress: currentTrade.to.address, // The token you want to receive\n    amount: amount,\n    fromAddress: userAddress, // Your wallet address\n    slippage: 1,\n  });\n}\n\ninit();\n\ndocument.getElementById(\"modal_close\").onclick = closeModal;\ndocument.getElementById(\"from_token_select\").onclick = () => {\n  openModal(\"from\");\n};\ndocument.getElementById(\"to_token_select\").onclick = () => {\n  openModal(\"to\");\n};\ndocument.getElementById(\"login_button\").onclick = login;\ndocument.getElementById(\"from_amount\").onblur = getQuote;\ndocument.getElementById(\"swap_button\").onclick = trySwap;\n"],"names":[],"version":3,"file":"index.c4775257.js.map","sourceRoot":"/__parcel_source_root/"}